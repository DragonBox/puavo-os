#!/bin/sh
#
# ##############################################################################
#
# Copyright (C) 2016 Opinsys Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# ##############################################################################
#
# Author: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>
#

set -eu

usage_error()
{
    echo "ERROR: $1" >&2
    echo "Try --help for help". >&2
    return 1
}

clone_from=

while [ $# -gt 0 ]; do
    case $1 in
        -c|--clone)
            shift
            clone_from=$1
            shift
            if [ ! -d "${clone_from}/pool" ]; then
                usage_error "source repository does not have pool directory"
            fi
            ;;
        -h|--help)
            shift
            echo "Usage: $0 DIR"
            echo
            echo "Create a very simple APT repository."
            echo
            echo "Options:"
            echo "    -c, --clone REPOSITORY       clone REPOSITORY, including packages"
            echo "    -h, --help                   print help and exit"
            echo
            exit 0
            ;;
        --)
            shift
            break
            ;;
        -*)
            usage_error "invalid argument '$1'"
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -ne 1 ]; then
    usage_error "invalid number of arguments: got $#, expected 1"
fi

repopath=$1
shift

mkdir "${repopath}"
mkdir "${repopath}/pool"

cat >"${repopath}/Makefile" <<'EOF'
Release.gpg: Release
	gpg --output - -a -b $< >$@

Release: Packages.gz Sources.gz
	apt-ftparchive release . >$@

%.gz: %
	gzip -c $< >$@

Packages: pool $(wildcard pool/*.deb)
	apt-ftparchive packages pool >$@

Sources: pool $(wildcard pool/*.deb)
	apt-ftparchive sources pool >$@

pool:
	mkdir $@

.PHONY: clean
clean:
	rm -rf Packages Packages.gz Release Release.gpg Sources Sources.gz
EOF

if [ -n "${clone_from}" ]; then
    find -L "${clone_from}/pool" -type f -name '*.deb' \
	-exec cp -n {} "${repopath}/pool" \;
fi

make -C "${repopath}"
