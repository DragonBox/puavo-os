#!/usr/bin/ruby2.0

require 'puavo/gems'
require 'optparse'
require "highline/import"
require "puavo/image_client"

@options = {
  :puavo_image_series_server => "https://images.opinsys.fi"
}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: puavo-upload-image [options] <file>"

  opts.on("--server SERVER", "Puavo Image Series server host") do |server|
    @options[:puavo_image_series_server] = server
  end

  opts.on("--image-series IMAGE_SERIES") do |image_series|
    @options[:image_series] = image_series
  end

  opts.on("--organisation-domain DOMAIN") do |domain|
    @options[:domain] = domain
  end

  opts.on_tail("-h", "--help", "Show this message") do
    STDERR.puts opts
    Process.exit
  end
end

parser.parse!

unless ARGV[0]
  puts "Set upload file!"
  Process.exit(1)
end

upload_file_path = ARGV[0]

sha256 = Digest::SHA256.new
upload_file = File.open(upload_file_path, 'rb') do |io|
  while (buffer = io.read(4096))
    sha256.update(buffer)
  end
end

client = PuavoImageClient::Upload.new( :meta_server => @options[:puavo_image_series_server],
                                       :domain => @options[:domain] )

image = client.post(@options[:puavo_image_series_server] + "/series/" + @options[:image_series] + "/image",
             { :sha256 => sha256.hexdigest,
               :size => File.stat(upload_file_path).size })

upload_file = File.open(upload_file_path)
upload = client.post(image["upload_url"], {
                'Content-Transfer-Encoding' => 'binary',
                :content => upload_file } )
upload_file.close

if upload["status"] == "successfully"
  image = client.put(@options[:puavo_image_series_server] + "/series/" + @options[:image_series] + "/image/" + image["uuid"],
              { :upload_status => "ready" })

  puts "Image has been sent successfully"
else
  puts "Something went wrong: "
  puts upload["error"] if upload.has_key?("error")
end
