#!/usr/bin/ruby1.9.3
#
# Get device settings from the LDAP-server (Puavo) and generate pxelinux.cfg data for terminal.
# 
# Usage: [sudo] ltspboot-config [options]
#

require 'ldap'
require 'optparse'

class PuavoLdap
  attr_reader :base, :dn, :password

  ESCAPES = {
    "\0" => '00',
    '*'  => '2A',
    '('  => '28',
    ')'  => '29',
    '\\' => '5C' }

  ESCAPES_RE = Regexp.new("[#{ ESCAPES.keys.map { |e| Regexp.escape(e) }.join }]")

  def initialize(ldapserver='localhost')
    @base       = File.read('/etc/puavo/ldap/base'    ).chomp
    @dn         = File.read('/etc/puavo/ldap/dn'      ).chomp
    @password   = File.read('/etc/puavo/ldap/password').chomp
    ldapserver  = File.read('/etc/puavo/ldap/master'  ).chomp

    if ldapserver
      @conn = LDAP::Conn.new(ldapserver)
      @conn.set_option(LDAP::LDAP_OPT_PROTOCOL_VERSION, 3)
      @conn.start_tls
      @conn.bind(@dn, @password)

    else
      @conn = nil
    end
  end
  def search(filter, &block)
    search_with_base(@base, filter, &block)
  end

  def search_with_base(base, filter, &block)
    return [] unless @conn
    @conn.search(base, LDAP::LDAP_SCOPE_SUBTREE, filter, &block)
  end

  def self.escape(filter)
    filter.gsub(ESCAPES_RE) { |char| "\\" + ESCAPES[char] }
  end

end

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: [sudo] ltspboot-config [options]"

  opts.on("-m", "--mac", "MAC address") do |m|
    options[:mac] = m
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

unless options.has_key?(:mac)
  puts "Required option --mac missing"
  exit
end


client_mac = options[:mac].to_s.gsub('-', ':').downcase
client_mac = PuavoLdap.escape( client_mac )

filter = "(&(|(objectClass=puavoNetbootDevice)(objectClass=puavoLocalbootDevice))(macAddress=#{client_mac}))"
ltsp_client = {}
PuavoLdap.new.search(filter) do |entry|
  ltsp_client = entry.to_hash
end

kernel_version = ltsp_client['puavoDeviceKernelVersion'].to_s
kernel_version = "-" + kernel_version if not kernel_version.empty?

kernel_args = ltsp_client['puavoDeviceKernelArguments'].to_s
kernel_args = "quiet splash" if kernel_args.empty?

image = ltsp_client['puavoDeviceImage'].to_s
image = "default" if image.empty?

puts <<EOF
kernel vmlinuz#{kernel_version}
append ro initrd=initrd.img#{kernel_version} init=/sbin/init-ltsp plymouth:force-splash vt.handoff=7 root=/dev/nbd0 nbdroot=:#{image} #{kernel_args}"
ipappend 2
EOF
