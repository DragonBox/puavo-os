#!/usr/bin/ruby

require "ldap"

@binddn = File.open('/etc/puavo/ldap/dn', 'r') { |f| f.read }
@bindpw = File.open('/etc/puavo/ldap/password', 'r') { |f| f.read }
@suffix = File.open('/etc/puavo/ldap/base', 'r') { |f| f.read }
@ldaphost = `hostname -f`.strip
@ldapuri = "ldap://#{@ldaphost}"

@binddn.strip!
@bindpw.strip!
@suffix.strip!

@totals = Hash.new
@organisations = Hash.new

def wake_wlanaps(suffix,print_hostnames)
  hostlist = ""

  conn = LDAP::SSLConn.new(host=@ldaphost, port=636)
  conn.set_option(LDAP::LDAP_OPT_PROTOCOL_VERSION, 3)

  devices = Hash.new
  name = suffix

  conn.bind(@binddn, @bindpw) do
    begin
      domain = ""

      conn.search(suffix, LDAP::LDAP_SCOPE_SUBTREE, "(|(&(objectClass=puavoNetbootDevice)(puavoTag=wlan*))(puavoDeviceType=infotv))") {|e|
        hostname = e.get_values('cn')[0]

        e.get_values('puavoSchool')[0] =~ /puavoId=(\d+),/
        schoolid = $1
        wlan_exists = 0
        infotv = 0

        if hostname.include? "info"
          infotv = 1
        end

        if e.get_values('puavoTag')
          e.get_values('puavoTag').each do |tag|
            if tag =~ /wlanch(\d+)/
              wlan_exists = 1
            end
          end
        end

        if wlan_exists or infotv
          if print_hostnames
            puts hostname
          end

          e.get_values('macAddress').each do |mac|
            system('etherwake', '-i', 'ltsp0', mac)
          end
        end
      }

      @organisations[name] = hostlist
    rescue LDAP::ResultError
      conn.perror("Virhe")
      puts "Virhe"
    end
  end
end

wake_wlanaps(@suffix,false)
sleep(1)
wake_wlanaps(@suffix,true)
