#!/usr/bin/ruby

require 'erb'
require 'json'
require 'fileutils'
require 'puavo/conf'

def delete_file(file)
  if File.exists?(file)
    File.delete(file)
  end
end

def read_file(file)
  if File.exists?(file)
    return File.read(file).chomp
  end

  return ""
end

def write_config(filename, version=nil, secure=false)
  begin
    template_file = filename

    if version
      template_file = "#{filename}-#{version}"
    end

    conf_template = File.read("/usr/share/puavo-ltsp-client/templates#{template_file}")
    conf = ERB.new(conf_template, 0, "%<>")

    perm = secure ? 0600 : 0644

    File.open(filename, "w", perm) do |f|
      f.write conf.result
    end

    File.chmod(perm, filename)
  rescue StandardError => e
    $stderr.puts "FAILED to write: #{filename} from /usr/share/puavo-ltsp-client/templates#{template_file}: #{e}"
  end
end

@puavo_device_type = ARGV[0]

@puavoconf = Puavo::Conf.new

@puavo_device_type         = @puavoconf.get('puavo.hosttype')
@puavo_guestlogin_enabled  = @puavoconf.get('puavo.guestlogin.enabled')
@puavo_guestlogin_mode     = @puavoconf.get('puavo.guestlogin.mode')
@puavo_xsessions_default   = @puavoconf.get('puavo.xsessions.default')
@puavo_xsessions_locked    = @puavoconf.get('puavo.xsessions.locked') == 'true'

@enable_suspend    = (@puavoconf.get('puavo.pm.suspend.enabled') == 'true')
@enable_lidsuspend = @enable_suspend && (@puavoconf.get('puavo.pm.lidsuspend.enabled') == 'true')

@puavoconf.close

@device = {}
@tags = []

Uninstalled_device_types = %w(diskinstaller preinstalled unregistered)
if Uninstalled_device_types.include?(@puavo_device_type) then
  if @puavo_device_type == 'preinstalled' then
    write_config("/etc/sudoers.d/puavo-install-when-preinstalled")
    write_config("/etc/xdg/autostart/puavo-install.desktop")
  end

  exit(0)
end

@ldap_master       = read_file('/etc/puavo/ldap/master')
@ldap_slave        = read_file('/etc/puavo/ldap/slave')
@ldap_base         = read_file('/etc/puavo/ldap/base')
@kerberos_master   = read_file('/etc/puavo/kerberos/master')
@kerberos_realm    = read_file('/etc/puavo/kerberos/realm' )
@kerberos_toprealm = read_file('/etc/puavo/kerberos/toprealm' )
@puavo_hostname    = read_file('/etc/puavo/hostname')
@puavo_domain      = read_file('/etc/puavo/domain')
@puavo_topdomain   = read_file('/etc/puavo/topdomain')

if File.exists?("/etc/puavo/device.json")
  @device = JSON.parse( File.read("/etc/puavo/device.json") )
  @tags   = @device["tags"] || []
end

exit(0)
