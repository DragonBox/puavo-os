#!/bin/sh

set -eu

API_SERVER="$(/usr/sbin/puavo-resolve-api-server)" || true
if [ -z "$API_SERVER" ]; then
  echo 'Could not resolve Puavo API server' >&2
  exit 1
fi

PUAVO_HOSTNAME="$(cat /etc/puavo/hostname 2>/dev/null)" || true
if [ -z "$PUAVO_HOSTNAME" ]; then
  echo 'Could not read puavo hostname from /etc/puavo/hostname' >&2
  exit 1
fi

usage() {
  cat <<EOF
Usage:
  $(basename $0) [--pass-credentials|--user-bootserver|--user-etc|--user-krb]
                 [--post]
                 urlpath
EOF
}

check_mode() {
  if [ -n "$1" ]; then
    usage >&2
    exit 1
  fi
}

make_request() {
  urlpath=$1
  shift

  # use curl instead of puavo-rest-client for efficiency reasons

  # no timeouts here, it is the caller's responsibility to decide on that
  curl --cacert /etc/puavo/certs/rootca.pem       \
       --fail                                     \
       --form-string "hostname=${PUAVO_HOSTNAME}" \
       --show-error                               \
       --silent                                   \
       "$@"                                       \
       "${API_SERVER}/${urlpath}"

}

curl_args=''
mode=''
password=false

if ! args=$(getopt -n "$0" -o + \
  -l 'pass-credentials,post,user-bootserver,user-etc,user-krb' -- "$@"); then
    usage >&2
    exit 1
fi

eval "set -- $args"
while [ $# -ne 0 ]; do
  case "$1" in
    --pass-credentials)
      check_mode "$mode"

      password="$(cat 2>/dev/null || true)"
      if [ -z "$password" ]; then
        echo 'Could not read password from stdin' >&2
        exit 1
      fi
      username="${USER:-}"
      if [ -z "$username" ]; then
        echo 'Could not find username from USER environment variable' >&2
        exit 1
      fi

      mode='pass-credentials'
      shift
      ;;

    --post)
      curl_args="$curl_args -X POST"
      shift
      ;;

    --user-bootserver) check_mode "$mode"; mode='bootserver'; shift ;;
    --user-etc)        check_mode "$mode"; mode='etc'       ; shift ;;
    --user-krb)        check_mode "$mode"; mode='krb'       ; shift ;;
    --) shift; break;;
    *) usage >&2; exit 1 ;;
  esac
done

urlpath=${1:-}

if [ -z "$urlpath" ]; then
  usage >&2
  exit 1
fi

case "$mode" in
  '')
    make_request "$urlpath" $curl_args
    ;;

  bootserver)
    make_request "$urlpath" $curl_args --header 'Authorization: Bootserver'
    ;;

  etc)
    device_dn="$(cat /etc/puavo/ldap/dn 2>/dev/null)" || true
    if [ -z "$device_dn" ]; then
      echo 'Could not determine device dn for this host' >&2
      exit 1
    fi

    device_password="$(cat /etc/puavo/ldap/password 2>/dev/null)" || true
    if [ -z "$device_password" ]; then
      echo 'Could not determine device password for this host' >&2
      exit 1
    fi

    echo "--user ${device_dn}:${device_password}" \
      | make_request "$urlpath" $curl_args --config -
    ;;

  krb)
    make_request "$urlpath"          \
                 $curl_args          \
                 --delegation always \
                 --negotiate         \
                 --user :
    ;;

  pass-credentials)
    echo -n "$password" \
      | make_request "$urlpath" $curl_args \
          --form-string "username=${username}" \
          --form "password=<-"
    ;;

  *)
    echo "$(basename $0) internal error" >&2
    exit 1
    ;;
esac

exit 0
