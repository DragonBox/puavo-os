#!/bin/sh

set -e

lookup_windows_partition_number() {
  # Presume that the first partition not containing "Linux"
  # is a Windows-partition.
  _diskdev=$1
  fdisk -l $_diskdev \
    | awk '$1 ~ "^/dev/" && !/Linux/ {
	     if (match($1, /[0-9]+$/, _)) { print _[0]; exit }
           }'
}

if [ "$1" = "--only-update-config" ]; then
  only_update_config=true
  shift
else
  only_update_config=false
fi

images_dir=${1:-/images}
diskdev=$2

if [ -z "$diskdev" ]; then
  diskdev=$(pvs | awk '$2 == "puavo" { print $1; exit }' \
		| sed -E 's|[0-9]+$||')
fi

if [ -z "$images_dir" -o -z "$diskdev" ]; then
  echo "Usage: $(basename $0) [--only-update-config] [images_dir] [diskdev]" \
    > /dev/stderr
  exit 1
fi

hosttype=$(cat /etc/puavo/hosttype)

case "$hosttype" in
  laptop)
    hosttype_specific='puavo.hosttype=laptop root=/dev/mapper/puavo-images loop="${imagepath}"'
    ;;
  *)
    echo "Hosttype '$hosttype' is not supported" > /dev/stderr
    exit 1
    ;;
esac

if ! $only_update_config; then
  grub-install --root-directory=$images_dir $diskdev
fi

cat <<'EOF' | sed "s|__HOSTTYPE_SPECIFIC__|$hosttype_specific|" > $images_dir/boot/grub/grub.cfg.tmp
set default="0"

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if loadfont unicode ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=fi_FI
  insmod gettext
fi
terminal_output gfxterm
set timeout=5
### END /usr/local/etc/grub.d/00_header ###

function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$'    "$1"; }
function devname  { regexp -s "$2"   '^(\(.*\)).*$'        "$1"; }

function ltsp_image_entry {
  set imagefile="$1"

  pathname $imagefile imagepath
  devname $imagefile dev

  echo $imagepath
  echo $dev

  menuentry "LTSP - ${dev}${imagepath}" "$imagefile" "$dev" "$imagepath" {
    set imagefile="$2"
    set dev="$3"
    set imagepath="$4"

    if test -f "${dev}/ltsp-kernel-settings"; then
      load_env -f "${dev}/ltsp-kernel-settings"
    fi

    loopback loop "${imagefile}"
    set root='(loop)'

    linux   /boot/vmlinuz${kernelversion} ro verbose init=/sbin/init-puavo __HOSTTYPE_SPECIFIC__ ${kernelparameters}
    initrd  /boot/initrd.img${kernelversion}

    loopback -d loop
  }
}

insmod gzio
insmod part_msdos
insmod ext2
insmod squash4
insmod biosdisk
insmod regexp
insmod loopback
insmod usb_keyboard
insmod lvm

for dev in (lvm/puavo-images); do
  echo "${dev}"

  set primaryimage="${dev}/ltsp.img"

  echo "PRIMARY: ${primaryimage}"
  ltsp_image_entry "${primaryimage}"

  for file in ${dev}/*.img; do
    if test "${file}" = "${primaryimage}"; then continue; fi

    echo "${file}"
    ltsp_image_entry "${file}"
  done
done
EOF

windows_partition_number=$(lookup_windows_partition_number $diskdev)

if [ -n "$windows_partition_number" ]; then
  cat <<EOF >> $images_dir/boot/grub/grub.cfg.tmp

menuentry "Windows" {
  insmod ntfs
  set root=(hd0,$windows_partition_number)
  chainloader +1
}
EOF
fi

mv $images_dir/boot/grub/grub.cfg.tmp $images_dir/boot/grub/grub.cfg

# We have got some weird spurious grub errors of the sort (at first boot):
# "error: ELF header smaller than expected", so we play it safe
# and try weird tricks to flush all caches to actual, physical disk.
# But we are not quite sure yet this will actually work (the problem is
# difficult to reproduce).
sync
echo 3 > /proc/sys/vm/drop_caches
blockdev --flushbufs $diskdev
hdparm -qF $diskdev
