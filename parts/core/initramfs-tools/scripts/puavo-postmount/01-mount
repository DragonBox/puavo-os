#!/bin/sh

MINKVER="2.6.17"
PREREQ=""

# Output pre-requisites
prereqs()
{
    echo "$PREREQ"
}

case "$1" in
    prereqs)
        prereqs
        exit 0
        ;;
esac

test "$BOOT" = "puavo" || exit 0

PUAVO_IMAGE_OVERLAY=

# Set the defaults based on the bootmode. local means using only local disk
# partitions that have default values for /home, /images, /imageoverlays,
# /state/, /tmp and swap.
#
# mixed uses an NBD root device, but can mount local partitions if they are
# defined on the command line.

case "${ROOT}" in
    /dev/nbd*)
        PUAVO_BOOT_MODE=net
        ;;
    *)
        PUAVO_BOOT_MODE=local
        ;;
esac

case "${PUAVO_BOOT_MODE}" in
    local)
        PUAVO_LVM_VG="puavo"
        PUAVO_LVM_LV_HOME="home"
        PUAVO_LVM_LV_IMAGES="images"
        PUAVO_LVM_LV_IMAGEOVERLAYS="imageoverlays"
        PUAVO_LVM_LV_STATE="state"
        PUAVO_LVM_LV_SWAP="swap"
        PUAVO_LVM_LV_TMP="tmp"
        ;;
    mixed)
        PUAVO_LVM_VG="puavo"
        ;;
esac

for x in $(cat /proc/cmdline); do
    case "$x" in
        puavo.image.path=*)
            PUAVO_IMAGE_PATH="${x#puavo.image.path=}"
            ;;
        puavo.image.overlay=*)
            PUAVO_IMAGE_OVERLAY="${x#puavo.image.overlay=}"
            ;;
        puavo.image.fstype=*)
            PUAVO_IMAGE_FSTYPE="${x#puavo.image.fstype=}"
            ;;
        puavo.lvm.vg=*)
            PUAVO_LVM_VG="${x#puavo.lvm.vg=}"
            ;;
        puavo.lvm.lv.home=*)
            PUAVO_LVM_LV_HOME="${x#puavo.lvm.lv.home=}"
            ;;
        puavo.lvm.lv.images=*)
            PUAVO_LVM_LV_IMAGES="${x#puavo.lvm.lv.images=}"
            ;;
        puavo.lvm.lv.imageoverlays=*)
            PUAVO_LVM_LV_IMAGEOVERLAYS="${x#puavo.lvm.lv.imageoverlays=}"
            ;;
        puavo.lvm.lv.state=*)
            PUAVO_LVM_LV_STATE="${x#puavo.lvm.lv.state=}"
            ;;
        puavo.lvm.lv.swap=*)
            PUAVO_LVM_LV_SWAP="${x#puavo.lvm.lv.swap=}"
            ;;
        puavo.lvm.lv.tmp=*)
            PUAVO_LVM_LV_TMP="${x#puavo.lvm.lv.tmp=}"
            ;;
    esac
done

# contains definition for "panic"
. /scripts/functions

loopmount_image()
{
    if [ ! -f "${rootmnt}${PUAVO_IMAGE_PATH}" ]; then
        panic "${rootmnt}${PUAVO_IMAGE_PATH} does not exist!"
    fi

    mkdir -p /host
    mount -o move "${rootmnt}" /host

    # Get the loop filesystem type if not set
    # fstype command sets FSTYPE and FSSIZE variables
    if [ -z "${PUAVO_IMAGE_FSTYPE}" ]; then
        eval $(/bin/fstype < "/host/${PUAVO_IMAGE_PATH#/}")
    else
        FSTYPE="${PUAVO_IMAGE_FSTYPE}"
    fi

    if [ "$FSTYPE" = "unknown" -o "$FSTYPE" = "" ] && [ -x /sbin/blkid ]; then
        FSTYPE=$(/sbin/blkid -s TYPE -o value "/host/${PUAVO_IMAGE_PATH#/}")
    fi

    [ -z "$FSTYPE" ] && FSTYPE="unknown"

    modprobe loop
    modprobe "${FSTYPE}"

    mount -r -t "${FSTYPE}" -o loop "/host/${PUAVO_IMAGE_PATH#/}" "${rootmnt}"
    ret=$?

    if [ "$ret" -gt 0 ]; then
        panic "Failed to loop mount /host/${PUAVO_IMAGE_PATH#/} to ${rootmnt}"
    fi
}

do_union_mount()
{
    cow=$1

    mkdir -p /rofs
    mount -o move "${rootmnt}" /rofs

    if modprobe overlayfs; then
        mount -t overlayfs \
              -o "upperdir=${cow},lowerdir=/rofs" overlayfs "${rootmnt}" || {
            mkdir "${cow}/rootdir" "${cow}/workdir"
            mount -t overlayfs \
                  -o "upperdir=${cow}/rootdir,lowerdir=/rofs,workdir=${cow}/workdir" \
                  overlayfs "${rootmnt}"
        }
    elif modprobe overlay; then
        mkdir "${cow}/rootdir" "${cow}/workdir"
        mount -t overlay \
              -o "upperdir=${cow}/rootdir,lowerdir=/rofs,workdir=${cow}/workdir" \
              overlay "${rootmnt}"
    elif modprobe aufs; then
        mount -t aufs -o "dirs=${cow}=rw:/rofs=ro" aufs "${rootmnt}"
    else
        panic "Could not load neither overlayfs nor aufs."
    fi

    mkdir -p "${rootmnt}/rofs"
    mount -o move /rofs "${rootmnt}/rofs"
}

do_union_mount_temporary()
{
    mkdir -p /cow
    mount -t tmpfs -o mode=0755 tmpfs /cow

    do_union_mount /cow

    mkdir -p "${rootmnt}/cow"
    mount -o move /cow "${rootmnt}/cow"
}

do_union_mount_persistent()
{
    cow="/imageoverlays/${PUAVO_IMAGE_NAME}/${PUAVO_IMAGE_OVERLAY}"
    mkdir -p "${cow}"

    do_union_mount "${cow}"
}

mount_puavo_partition() {
    name=$1
    if [ -b "/dev/mapper/${PUAVO_LVM_VG}-${name}" ]; then
        mkdir -p "/${name}"

        OPTIONS="-o noatime"

        mount ${OPTIONS} "/dev/mapper/${PUAVO_LVM_VG}-${name}" "/${name}"
    fi
}

move_puavo_partition()
{
    name=$1

    mkdir -p "${rootmnt}/${name}"
    mount -o move "/${name}" "${rootmnt}/${name}"
}

write_fstab_partition()
{
    partition=$1
    mntpoint=$2
    extra_options=$3

    eval $(/bin/fstype < "${partition}")

    OPTIONS="noatime"

    if [ -n "${extra_options}" ]; then
        OPTIONS="${OPTIONS},${extra_options}"
    fi

    echo "${partition}	${mntpoint}	${FSTYPE}	${OPTIONS}	0	2" >> "${rootmnt}/etc/fstab"
}

write_fstab()
{
    cat <<EOF >"${rootmnt}/etc/fstab"
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
proc            /proc           proc    nodev,noexec,nosuid 0       0
EOF

    if [ -n "${PUAVO_LVM_LV_HOME}" ]; then
        write_fstab_partition "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_HOME}" "/home" "acl"
    fi

    if [ -n "${PUAVO_LVM_LV_IMAGES}" ]; then
        write_fstab_partition "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_IMAGES}" "/images" ""
    fi

    if [ -n "${PUAVO_LVM_LV_IMAGEOVERLAYS}" ]; then
        write_fstab_partition "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_IMAGEOVERLAYS}" "/imageoverlays" ""
    fi

    if [ -n "${PUAVO_LVM_LV_STATE}" ]; then
        write_fstab_partition "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_STATE}" "/state" ""
    fi

    if [ -n "${PUAVO_LVM_LV_TMP}" ]; then
        write_fstab_partition "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_TMP}" "/tmp" ""
    fi

    if [ -n "${PUAVO_LVM_LV_SWAP}" ]; then
        echo "/dev/mapper/${PUAVO_LVM_VG}-${PUAVO_LVM_LV_SWAP}	none	swap	sw	0	0" >> "${rootmnt}/etc/fstab"
    fi
}

write_mtab()
{
    if [ -L /etc/mtab ]; then
        rm /etc/mtab
        :>/etc/mtab
    fi
}

if [ -n "${PUAVO_LVM_VG}" ]; then
    if [ -x "/sbin/vgchange" ]; then
        vgchange -a y "${PUAVO_LVM_VG}"
    else
        panic "initrd missing /sbin/vgchange!"
    fi
fi

loopmount_used=0
if [ -n "${PUAVO_IMAGE_PATH}" ]; then
    loopmount_image
    loopmount_used=1
fi

if [ -f "${rootmnt}/usr/share/puavo-image/image-name" ]; then
    PUAVO_IMAGE_NAME=$(cat "${rootmnt}/usr/share/puavo-image/image-name")
else
    PUAVO_IMAGE_NAME="default"
fi

if [ "$loopmount_used" -gt 0 -a -n "${PUAVO_IMAGE_PATH}" -a -n "${PUAVO_IMAGE_OVERLAY}" ]; then
    {
        mount_puavo_partition imageoverlays \
            && do_union_mount_persistent      \
            && move_puavo_partition imageoverlays
    } || panic "could not mount persistent overlay"
else
    do_union_mount_temporary
fi

write_fstab

# If using a loopmount image, move the /images partition under loop mounted root
# and remount the partition as writable
if [ "$loopmount_used" -gt 0 ]; then
    mkdir -p "${rootmnt}/images"
    mount -o move /host "${rootmnt}/images"
    mount -o remount,noatime,rw "${rootmnt}/images"
fi

[ -z "${rootmnt}" ] && panic "rootmnt unknown in init-bottom"
[ -d "${rootmnt}/proc" ] || panic "rootmnt not mounted in init-bottom"
