#!/bin/sh

set -eu

mode=$1
srcpkgname=$2
workdir=$3
pooldir=$4

build_checksum_file=''
builddeps_checksum_file=''

case "$mode" in
  --build-pkgs)
    build_checksum_file="${workdir}/.checksum.${srcpkgname}.build"
    ;;
  --install-build-deps)
    builddeps_checksum_file="${workdir}/.checksum.${srcpkgname}.builddeps"
    ;;
  *)
    echo "Usage: $(basename $0) --build-pkgs|--install-build-deps srcpkg workdir pooldir" >&2
    exit 1
    ;;
esac

pkgworkdir="${workdir}/${srcpkgname}"

rm -rf "${pkgworkdir}"
mkdir -p "${pkgworkdir}/${srcpkgname}"

cp -aH "$srcpkgname"/* "${pkgworkdir}/${srcpkgname}/"

current_srctree_checksum="$(find "$pkgworkdir" -type f -exec md5sum \{} \; \
                             | sort | md5sum | awk '{ print $1 }')"

if [ -z "$current_srctree_checksum" ]; then
  echo 'Could not calculate checksum from source tree' >&2
  exit 1
fi

if [ -n "$builddeps_checksum_file" ]; then
  old_srctree_checksum="$(cat "${builddeps_checksum_file}" 2>/dev/null || true)"

  if [ "$current_srctree_checksum" = "$old_srctree_checksum" ]; then
    # No need to re-install build deps if source tree matches what we have
    # handled previously.
    echo "No changes to ${srcpkgname} (for build dependencies)."
  else
    (
      echo "Installing build dependencies for ${srcpkgname}"

      cd "$pkgworkdir"
      ${PUAVOOS_SUDO:-} mk-build-deps -i "${srcpkgname}/debian/control" \
        -t 'apt-get -y --force-yes'
    )

    echo "$current_srctree_checksum" > "$builddeps_checksum_file"
  fi
fi

if [ -n "$build_checksum_file" ]; then
  old_srctree_checksum="$(cat "${build_checksum_file}" 2>/dev/null || true)"

  if [ "$current_srctree_checksum" = "$old_srctree_checksum" ]; then
    # No need to build if source tree matches what we have handled previously.
    echo "No changes to ${srcpkgname} (for build)."
  else
    (
      echo "Building ${srcpkgname}"

      cd "${pkgworkdir}/${srcpkgname}"
      debian/scripts/get-orig-source

      current_deb_version="$(dpkg-parsechangelog -S version \
			       | sed -E 's/\+build[0-9]+$//')"
      if [ -z "$current_deb_version" ]; then
	echo "Could not determine package version for ${srcpkgname}." >&2
	exit 1
      fi

      if ! echo "$current_deb_version" | grep -q '\+buildonce$'; then
	new_deb_version="${current_deb_version}+build$(date +%s)"
	env DEBFULLNAME="Puavo Org" DEBEMAIL="dev@opinsys.fi" \
	  dch --newversion "$new_deb_version" \
	    "Automatic build for puavo-os on $(env LANG=C date)."
	  dch --distribution "$(lsb_release -cs)" --release ''
      fi

      dpkg-buildpackage -sa -uc -us
      ../../../../parts/devscripts/bin/do-debpool-changes -m "$pooldir"
    )

    echo "$current_srctree_checksum" > "$build_checksum_file"
  fi
fi
