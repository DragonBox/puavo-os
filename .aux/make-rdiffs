#!/usr/bin/rake -mf

require 'json'

image_dir  = ENV['image_dir']
mirror_dir = ENV['mirror_dir']

raise '"image_dir" environment variable not defined' \
  if image_dir.nil? || image_dir.empty?

raise '"mirror_dir" environment variable not defined' \
  if mirror_dir.nil? || mirror_dir.empty?

checksums_dir  = "#{ mirror_dir }/.checksums"
rdiffs_dir     = "#{ mirror_dir }/rdiffs"
signatures_dir = "#{ mirror_dir }/.signatures"

checksums_file = "#{ mirror_dir }/CKSUMS"

directory checksums_dir
directory rdiffs_dir
directory signatures_dir

image_series_json_path = 'images.json'

def parse_image_series(json_path)
  image_series = JSON.parse( File.read(json_path) )

  raise 'expecting hash' unless image_series.kind_of?(Hash)
  image_series.each do |key, value|
    raise 'expecting string as key' unless key.kind_of?(String)
    raise 'expecting list as value' unless value.kind_of?(Array)
    value.each do |item|
      raise 'expecting string as list value' unless item.kind_of?(String)
    end
  end

  return image_series
end

def find_rdiff_file(source_image, target_image)
  image_regexp = /^(.*?)-(\d{4}-\d{2}-\d{2}-\d{6})-(.*?).img$/

  source_match = source_image.match(image_regexp)
  raise "Bad image format '#{ source_image }'" unless source_match

  target_match = target_image.match(image_regexp)
  raise "Bad image format '#{ target_image }'" unless target_match

  return sprintf('%s-%s--%s-%s.rdiff',
		 source_match[1],
		 source_match[2],
		 target_match[2],
		 source_match[3])
end

#
# main
#

begin
  image_series = parse_image_series(image_series_json_path)
rescue StandardError => err
  warn "Error in parsing #{ image_series_json_path }: #{ err.message }"
  exit 1
end

#
# tasks
#

task :default => checksums_file

task checksums_file => :all_series

task :all_series

file checksums_file do |t|
  # XXX use filelist from all checksums files to generate checksums_file
end

image_series.each do |series_name, image_list|
  task series_name
  task :all_series => series_name

  target_image_rdiff_target = nil

  image_list.each_index do |i|
    target_image_file = image_list[i]
    target_image_rdiff_target = "#{ target_image_file }-rdiffs"

    target_image_file_copy = "#{ mirror_dir }/#{ target_image_file }"
    target_image_file_fp   = "#{ image_dir }/#{ target_image_file }"

    target_image_cksum_file = "#{ checksums_dir }/#{ target_image_file }.cksum"
    file checksums_file => target_image_cksum_file

    # XXX use this for meta-files...
    target_image_sha256sum_file =
      "#{ checksums_dir }/#{ target_image_file }.sha256sum"

    file target_image_cksum_file => [ checksums_dir, target_image_file_copy ]
    file target_image_cksum_file do |t|
      # XXX replace sh with something more secure
      tmpfile = "#{ target_image_cksum_file }.tmp"
      sh "cksum #{ target_image_file_copy } > #{ tmpfile }"
      mv tmpfile, target_image_cksum_file
    end

    task target_image_rdiff_target
    task series_name => target_image_rdiff_target
    task series_name => target_image_file_copy

    file target_image_file_copy => target_image_file_fp do |t|
      # This presumes that source and target are in the same filesystem.
      # If this is not the case, fix your configuration.
      ln target_image_file_fp, t.name
    end

    image_list.each_index do |j|
      # make rdiffs only to one direction (from earlier to later)
      next if i <= j

      source_image_file = image_list[j]
      source_image_file_fp = "#{ image_dir }/#{ image_list[j] }"

      rdiff_file = find_rdiff_file(source_image_file, target_image_file)
      rdiff_file_fp = "#{ rdiffs_dir }/#{ rdiff_file }"

      source_image_signature_file = "#{ source_image_file }.rdiff_signature"
      source_image_signature_file_fp =
	  "#{ signatures_dir }/#{ source_image_signature_file }"

      file source_image_signature_file_fp => signatures_dir
      file source_image_signature_file_fp => source_image_file_fp do |t|
	tmpfile = "#{ source_image_signature_file_fp }.tmp"
	sh 'rdiff', 'signature', source_image_file_fp, tmpfile
	mv tmpfile, t.name
      end

      task rdiff_file => rdiff_file_fp
      file rdiff_file_fp => [ rdiffs_dir,
			      source_image_signature_file_fp,
			      target_image_file_fp ]
      file rdiff_file_fp do |t|
	tmpfile = "#{ rdiff_file_fp }.tmp"
	sh 'rdiff', 'delta', source_image_signature_file_fp,
	    target_image_file_fp, tmpfile
	mv tmpfile, t.name
      end

      task target_image_rdiff_target => rdiff_file
    end
  end

  if target_image_rdiff_target then
    task "latest-#{ series_name }" => target_image_rdiff_target
  end
end
