description "Puavo LTSP core client init script, based on the ltsp-client-core.conf upstart script"
author "Veli-Matti Lintu <veli-matti.lintu@opinsys.fi>"

start on ((filesystem
           and runlevel [!06]
           and (drm-device-added card0 PRIMARY_DEVICE_FOR_DISPLAY=1
                or stopped udev-fallback-graphics))
          or runlevel PREVLEVEL=S)
stop on starting rc RUNLEVEL=[06]

pre-start script
    grep -Eqsw "init=/sbin/init-puavo" /proc/cmdline || exit 0

    # Make sure the locales are set
    if [ -r /etc/default/locale ]; then
        . /etc/default/locale
        export LANG LANGUAGE
    fi

    /usr/sbin/puavo-dns-client
    /usr/sbin/puavo-configure-client

    . /usr/share/ltsp/ltsp-init-common
    if [ -f "/etc/ltsp/getltscfg-cluster.conf" ]; then
        # Tell the control center that we are booting and get lts.conf
        eval $(getltscfg-cluster -a -l boot) || true
    fi

    if [ -x /bin/plymouth ]; then
        /bin/plymouth quit --retain-splash || true
    fi

    start_screen_sessions || true
    start_sound || true
end script

post-stop script
    grep -Eqsw "init=/sbin/init-puavo" /proc/cmdline || exit 0

    # XXX Disable for now... this has a good purpose, but unfortunately
    # XXX on some machines (having
    # XXX "Intel Corporation 6 Series/C200 Series Chipset Family MEI Controller #1 (rev 04)"
    # XXX as reported by lspci) using this only halts and does not poweroff
    # XXX the machine.  The problem is with "echo 0 > /proc/sysrq_trigger",
    # XXX but with that line removed at least an etc-2500 machine model
    # XXX then gains the same problem.  Perhaps we can do without this
    # XXX and let the "nbd-server"-processes die somewhat later?
    #
    # if [ -x /usr/share/ltsp/nbd-disconnect ]; then
    #     /usr/share/ltsp/nbd-disconnect&
    # fi
end script
